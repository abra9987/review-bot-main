import logging
import urllib.parse
import os
import openai
import random
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    CallbackQueryHandler,
    ConversationHandler,
    CallbackContext,
)
from db import check_user, get_questions, get_prompt, create_tables

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
START_MENU, QUESTION, CONFIRM_REVIEW, EDIT_REVIEW_STATE, HUMANIZE_PROCESSING, DEMOGRAPHIC_CHOICE = range(6)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI API
openai.api_key = OPENAI_API_KEY

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
demographic_profiles = {
    "young_male": {
        "name": "–º–æ–ª–æ–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ (18-30 –ª–µ—Ç)",
        "style": "—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–ª–æ–¥–µ–∂–Ω—ã–π —Å–ª–µ–Ω–≥ –∏ –∫–æ—Ä–æ—Ç–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
        "characteristics": "—Ü–µ–Ω–∏—Ç —Å–∫–æ—Ä–æ—Å—Ç—å, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å, –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å, –Ω–µ –ª—é–±–∏—Ç –∂–¥–∞—Ç—å"
    },
    "young_female": {
        "name": "–º–æ–ª–æ–¥–æ–π –∂–µ–Ω—â–∏–Ω—ã (18-30 –ª–µ—Ç)",
        "style": "—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç–º–æ–¥–∑–∏, –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π, –¥–µ—Ç–∞–ª—å–Ω—ã–π",
        "characteristics": "–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞ –∫ –¥–µ—Ç–∞–ª—è–º, —Ü–µ–Ω–∏—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞"
    },
    "middle_male": {
        "name": "–º—É–∂—á–∏–Ω—ã —Å—Ä–µ–¥–Ω–∏—Ö –ª–µ—Ç",
        "style": "—Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–π, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π, –¥–µ–ª–æ–≤–æ–π, –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ",
        "characteristics": "—Ü–µ–Ω–∏—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º, —á–µ—Ç–∫–æ—Å—Ç—å, –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å, —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
    },
    "woman_children": {
        "name": "–∂–µ–Ω—â–∏–Ω—ã —Å –¥–µ—Ç—å–º–∏",
        "style": "–∑–∞–±–æ—Ç–ª–∏–≤—ã–π, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç, —É–ø–æ–º–∏–Ω–∞–µ—Ç –¥–µ—Ç–µ–π",
        "characteristics": "–≤–∞–∂–Ω—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç—è–º, —Ç–µ—Ä–ø–µ–ª–∏–≤–æ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∞, —É–¥–æ–±—Å—Ç–≤–æ"
    },
    "elderly": {
        "name": "–ø–æ–∂–∏–ª–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞",
        "style": "–≤–µ–∂–ª–∏–≤—ã–π, —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π, —Ä–∞–∑–º–µ—Ä–µ–Ω–Ω—ã–π, –≤–æ–∑–º–æ–∂–Ω–æ —Å —Å–æ–≤–µ—Ç—Å–∫–∏–º–∏ —Ä–µ—á–µ–≤—ã–º–∏ –æ–±–æ—Ä–æ—Ç–∞–º–∏",
        "characteristics": "—Ü–µ–Ω–∏—Ç –≤–Ω–∏–º–∞–Ω–∏–µ, —É–≤–∞–∂–µ–Ω–∏–µ, –ø–æ–Ω—è—Ç–Ω—ã–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è, –Ω–µ —Ç–æ—Ä–æ–ø–ª–∏–≤–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ"
    },
    "random": {
        "name": "—Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞",
        "style": "–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–π",
        "characteristics": "–æ–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Å–æ —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏"
    }
}

# --- –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é ---
def start(update: Update, context: CallbackContext) -> int:
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    business_type = check_user(user_id)
    
    if not business_type:
        if update.message:
            update.message.reply_text("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        else:
            update.callback_query.message.reply_text("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return ConversationHandler.END
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data["business_type"] = business_type
    context.user_data["questions"] = get_questions(business_type)
    
    if not context.user_data["questions"]:
        if update.message:
            update.message.reply_text(f"–û—à–∏–±–∫–∞: –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–∏–ø–∞ –±–∏–∑–Ω–µ—Å–∞ '{business_type}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        else:
            update.callback_query.message.reply_text(f"–û—à–∏–±–∫–∞: –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–∏–ø–∞ –±–∏–∑–Ω–µ—Å–∞ '{business_type}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return ConversationHandler.END
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é
    keyboard = [
        [InlineKeyboardButton("‚úÖ –ù–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="start_survey")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    message_text = "üìå –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    if update.message:
        update.message.reply_text(message_text, reply_markup=reply_markup)
    else:
        update.callback_query.message.reply_text(message_text, reply_markup=reply_markup)
    
    return START_MENU

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é ---
def start_menu_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    
    if query.data == "start_survey":
        context.user_data["current_question"] = 0
        context.user_data["answers"] = []
        questions = context.user_data.get("questions", [])
        if not questions:
            query.edit_message_text(text="–û—à–∏–±–∫–∞: –≤–æ–ø—Ä–æ—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return ConversationHandler.END
        
        question_text = f"üìù –í–æ–ø—Ä–æ—Å 1/{len(questions)}:\n{questions[0]}"
        query.edit_message_text(text=question_text)
        return QUESTION
    
    elif query.data == "cancel":
        query.edit_message_text(text="–ê–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
        return ConversationHandler.END

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã ---
def answer_handler(update: Update, context: CallbackContext) -> int:
    current_q = context.user_data.get("current_question", 0)
    answer = update.message.text
    answers = context.user_data.get("answers", [])
    
    if len(answers) > current_q:
        answers[current_q] = answer
    else:
        answers.append(answer)
    
    context.user_data["answers"] = answers

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏, –≤–∫–ª—é—á–∞—è "–û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é"
    keyboard = [
        [
            InlineKeyboardButton("üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç", callback_data="edit_answer"),
            InlineKeyboardButton("‚è≠ –î–∞–ª–µ–µ", callback_data="next_question"),
        ],
        [InlineKeyboardButton("üè† –û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é", callback_data="back_to_menu")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(f"–û—Ç–≤–µ—Ç: \"{answer}\"\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
    return QUESTION

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —ç—Ç–∞–ø–µ –≤–æ–ø—Ä–æ—Å–æ–≤ ---
def question_callback_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    
    current_q = context.user_data.get("current_question", 0)
    questions = context.user_data.get("questions", [])
    
    if query.data == "edit_answer":
        query.edit_message_text(
            text=f"üìù –í–æ–ø—Ä–æ—Å {current_q+1}/{len(questions)}:\n{questions[current_q]}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç:"
        )
        return QUESTION
    
    elif query.data == "next_question":
        current_q += 1
        context.user_data["current_question"] = current_q
        
        if current_q < len(questions):
            question_text = f"üìù –í–æ–ø—Ä–æ—Å {current_q+1}/{len(questions)}:\n{questions[current_q]}"
            query.edit_message_text(text=question_text)
            return QUESTION
        else:
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–∞
            answers = context.user_data.get("answers", [])
            business_type = context.user_data.get("business_type")
            prompt_template = get_prompt(business_type)
            answers_text = "\n".join(f"{i+1}. {ans}" for i, ans in enumerate(answers))
            prompt = prompt_template.format(answers_text)
            
            query.edit_message_text(text="–§–æ—Ä–º–∏—Ä—É—é –æ—Ç–∑—ã–≤, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
            
            try:
                response = openai.ChatCompletion.create(
                    model="gpt-4o",
                    messages=[
                        {"role": "system", "content": "–¢—ã –ø–æ–º–æ–≥–∞–µ—à—å —Å–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –¥–ª—è –∫–ª–∏–Ω–∏–∫–∏."},
                        {"role": "user", "content": prompt},
                    ],
                    temperature=0.7,
                    max_tokens=200,
                )
                generated_review = response.choices[0].message.content.strip()
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ OpenAI API: {e}")
                query.edit_message_text(text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞.")
                return ConversationHandler.END

            context.user_data["generated_review"] = generated_review
            context.user_data["original_review"] = generated_review
            
            keyboard = [
                [
                    InlineKeyboardButton("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="edit_review"),
                    InlineKeyboardButton("üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", callback_data="personalize_review"),
                    InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", callback_data="send_whatsapp"),
                ],
                [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")],
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            query.edit_message_text(
                text=f"üéâ –û—Ç–∑—ã–≤ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω:\n\"{generated_review}\"", reply_markup=reply_markup
            )
            return CONFIRM_REVIEW
    
    elif query.data == "back_to_menu":
        # –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é
        context.user_data.clear()
        context.user_data["business_type"] = check_user(update.effective_user.id)
        context.user_data["questions"] = get_questions(context.user_data["business_type"])
        
        keyboard = [
            [InlineKeyboardButton("‚úÖ –ù–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="start_survey")],
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text(text="üìå –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
        return START_MENU

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ ---
def review_callback_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    
    if query.data == "edit_review":
        keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="cancel_edit")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text(
            text="–í–≤–µ–¥–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–∑—ã–≤ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥':",
            reply_markup=reply_markup,
        )
        return EDIT_REVIEW_STATE
    
    elif query.data == "send_whatsapp":
        review = context.user_data.get("generated_review", "")
        encoded_text = urllib.parse.quote(review)
        whatsapp_url = f"https://api.whatsapp.com/send?text={encoded_text}"
        
        keyboard = [
            [InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å WhatsApp", url=whatsapp_url)],
            [
                InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_from_whatsapp"),
                InlineKeyboardButton("–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="edit_review"),
                InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart"),
            ],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text(
            text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ —á–µ—Ä–µ–∑ WhatsApp:", reply_markup=reply_markup
        )
        return CONFIRM_REVIEW
    
    elif query.data == "back_from_whatsapp":
        generated_review = context.user_data.get("generated_review", "")
        keyboard = [
            [
                InlineKeyboardButton("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="edit_review"),
                InlineKeyboardButton("üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", callback_data="personalize_review"),
                InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", callback_data="send_whatsapp"),
            ],
            [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text(
            text=f"üéâ –û—Ç–∑—ã–≤ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω:\n\"{generated_review}\"", reply_markup=reply_markup
        )
        return CONFIRM_REVIEW
    
    elif query.data == "restart":
        business_type = context.user_data.get("business_type")
        questions = context.user_data.get("questions", [])
        context.user_data.clear()
        context.user_data["business_type"] = business_type
        context.user_data["questions"] = questions
        
        keyboard = [
            [InlineKeyboardButton("‚úÖ –ù–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="start_survey")],
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text(text="üìå –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
        return START_MENU

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏–∏ ---
def personalize_review_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –æ—Ç–∑—ã–≤
    review = context.user_data.get("generated_review", "")
    context.user_data["original_review"] = review
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ –æ–ø—Ü–∏—è–º–∏
    keyboard = [
        [
            InlineKeyboardButton("üë® –ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫ (18-30)", callback_data="demo_young_male"),
            InlineKeyboardButton("üë© –ú–æ–ª–æ–¥–∞—è –∂–µ–Ω—â–∏–Ω–∞ (18-30)", callback_data="demo_young_female"),
        ],
        [
            InlineKeyboardButton("üë®‚Äçüíº –ú—É–∂—á–∏–Ω–∞ —Å—Ä–µ–¥–Ω–∏—Ö –ª–µ—Ç", callback_data="demo_middle_male"),
            InlineKeyboardButton("üë©‚Äçüëß –ñ–µ–Ω—â–∏–Ω–∞ —Å –¥–µ—Ç—å–º–∏", callback_data="demo_woman_children"),
        ],
        [
            InlineKeyboardButton("üë¥ –ü–æ–∂–∏–ª–æ–π —á–µ–ª–æ–≤–µ–∫", callback_data="demo_elderly"),
            InlineKeyboardButton("üé≤ –°–ª—É—á–∞–π–Ω—ã–π", callback_data="demo_random"),
        ],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_review")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        text=f"üë§ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞:\n\n"
             f"–¢–µ–∫—É—â–∏–π –æ—Ç–∑—ã–≤:\n\"{review}\"",
        reply_markup=reply_markup
    )
    return DEMOGRAPHIC_CHOICE

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —ç–∫—Ä–∞–Ω—É –æ—Ç–∑—ã–≤–∞ ---
def back_to_review_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    
    review = context.user_data.get("generated_review", "")
    
    keyboard = [
        [
            InlineKeyboardButton("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="edit_review"),
            InlineKeyboardButton("üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", callback_data="personalize_review"),
            InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", callback_data="send_whatsapp"),
        ],
        [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        text=f"üéâ –û—Ç–∑—ã–≤ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω:\n\"{review}\"",
        reply_markup=reply_markup
    )
    return CONFIRM_REVIEW

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞ ---
def restore_original_review_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –æ—Ç–∑—ã–≤
    original_review = context.user_data.get("original_review", "")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –æ—Ç–∑—ã–≤
    context.user_data["generated_review"] = original_review
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    keyboard = [
        [
            InlineKeyboardButton("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="edit_review"),
            InlineKeyboardButton("üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", callback_data="personalize_review"),
            InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", callback_data="send_whatsapp"),
        ],
        [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.edit_message_text(
        text=f"üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏—Å—Ö–æ–¥–Ω—ã–π –æ—Ç–∑—ã–≤:\n\n\"{original_review}\"",
        reply_markup=reply_markup
    )
    return CONFIRM_REVIEW

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏–∏ ---
def demographic_choice_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    
    demographic_type = query.data.replace("demo_", "")
    review = context.user_data.get("original_review", "")
    
    query.edit_message_text(text="–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É—é –æ—Ç–∑—ã–≤, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
    
    if demographic_type == "random":
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å, –∫—Ä–æ–º–µ "random"
        demographic_type = random.choice([k for k in demographic_profiles.keys() if k != "random"])
    
    profile = demographic_profiles.get(demographic_type)
    
    # –ü—Ä–æ–º–ø—Ç –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞
    personalize_prompt = f"""
    –ü–µ—Ä–µ–ø–∏—à–∏ —ç—Ç–æ—Ç –æ—Ç–∑—ã–≤ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω –∑–≤—É—á–∞–ª –∫–∞–∫ –æ—Ç–∑—ã–≤ –æ—Ç {profile["name"]}.
    
    –°—Ç–∏–ª—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è: {profile["style"]}
    –ö–ª–∏–µ–Ω—Ç —Ü–µ–Ω–∏—Ç: {profile["characteristics"]}
    
    –ü—Ä–∞–≤–∏–ª–∞:
    1. –û—Ç–∑—ã–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –û–ß–ï–ù–¨ –∫–æ—Ä–æ—Ç–∫–∏–º (2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º—É–º)
    2. –ò—Å–ø–æ–ª—å–∑—É–π —Ä–µ—á–µ–≤—ã–µ –æ–±–æ—Ä–æ—Ç—ã, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –≥—Ä—É–ø–ø—ã
    3. –ò–∑–±–µ–≥–∞–π —Å–ª–∏—à–∫–æ–º —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —è–∑—ã–∫–∞
    4. –°–æ—Ö—Ä–∞–Ω–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞
    5. –î–æ–±–∞–≤—å 1-2 —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–∏, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã—Ö –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
    
    –í–æ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –æ—Ç–∑—ã–≤:
    "{review}"
    
    –°–æ–∑–¥–∞–π –∫–æ—Ä–æ—Ç–∫—É—é, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –æ—Ç–∑—ã–≤–∞.
    """
    
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": f"–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –æ—Ç –ª–∏—Ü–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤."},
                {"role": "user", "content": personalize_prompt},
            ],
            temperature=0.85,
            max_tokens=200,
        )
        personalized_review = response.choices[0].message.content.strip()
        context.user_data["generated_review"] = personalized_review
        
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞
        keyboard = [
            [
                InlineKeyboardButton("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="edit_review"),
                InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", callback_data="send_whatsapp"),
            ],
            [
                InlineKeyboardButton("üîô –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π", callback_data="restore_original"),
                InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart"),
            ],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        profile_name = demographic_profiles.get(demographic_type)["name"]
        query.edit_message_text(
            text=f"üé≠ –û—Ç–∑—ã–≤ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (—Å—Ç–∏–ª—å {profile_name}):\n\n\"{personalized_review}\"",
            reply_markup=reply_markup
        )
        return CONFIRM_REVIEW
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ OpenAI API –ø—Ä–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –≤—ã–±–æ—Ä—É –¥–µ–º–æ–≥—Ä–∞—Ñ–∏–∏
        keyboard = [
            [
                InlineKeyboardButton("üë® –ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫ (18-30)", callback_data="demo_young_male"),
                InlineKeyboardButton("üë© –ú–æ–ª–æ–¥–∞—è –∂–µ–Ω—â–∏–Ω–∞ (18-30)", callback_data="demo_young_female"),
            ],
            [
                InlineKeyboardButton("üë®‚Äçüíº –ú—É–∂—á–∏–Ω–∞ —Å—Ä–µ–¥–Ω–∏—Ö –ª–µ—Ç", callback_data="demo_middle_male"),
                InlineKeyboardButton("üë©‚Äçüëß –ñ–µ–Ω—â–∏–Ω–∞ —Å –¥–µ—Ç—å–º–∏", callback_data="demo_woman_children"),
            ],
            [
                InlineKeyboardButton("üë¥ –ü–æ–∂–∏–ª–æ–π —á–µ–ª–æ–≤–µ–∫", callback_data="demo_elderly"),
                InlineKeyboardButton("üé≤ –°–ª—É—á–∞–π–Ω—ã–π", callback_data="demo_random"),
            ],
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_review")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.\n\n"
                 f"–¢–µ–∫—É—â–∏–π –æ—Ç–∑—ã–≤:\n\"{review}\"",
            reply_markup=reply_markup
        )
        return DEMOGRAPHIC_CHOICE

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–µ–ª–æ–≤–µ—á–∏–≤–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞ ---
def humanize_review_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    
    review = context.user_data.get("generated_review", "")
    
    query.edit_message_text(text="–û—á–µ–ª–æ–≤–µ—á–∏–≤–∞—é –æ—Ç–∑—ã–≤, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è "–æ—á–µ–ª–æ–≤–µ—á–∏–≤–∞–Ω–∏—è" –æ—Ç–∑—ã–≤–∞
    humanize_prompt = """
    –¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫–æ—Ä–æ—Ç–∫–∏—Ö, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤. 
    –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª:
    1. –û—á–µ–Ω—å –ª–∞–∫–æ–Ω–∏—á–Ω—ã–º (–º–∞–∫—Å–∏–º—É–º 2-4 –∫–æ—Ä–æ—Ç–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
    2. –ó–≤—É—á–∞–ª –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –æ—Ç–∑—ã–≤ –¥–æ–≤–æ–ª—å–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞

    –ò—Å–ø–æ–ª—å–∑—É–π:
    - —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—É—é —Ä–µ—á—å –∏ –ø—Ä–æ—Å—Ç—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    - 1-2 —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏—è (–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å, —Ä–∞–¥–æ—Å—Ç—å)
    - –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é, –Ω–æ –∫—Ä–∞—Ç–∫—É—é –ø–æ—Ö–≤–∞–ª—É
    - —É–º–µ—Å—Ç–Ω—ã–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ —Ñ—Ä–∞–∑—ã

    –ò–∑–±–µ–≥–∞–π:
    - –¥–ª–∏–Ω–Ω—ã—Ö, —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    - –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–π –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –¥–µ—Ç–∞–ª–µ–π
    - –∏–∑–ª–∏—à–Ω–µ –≤–æ—Å—Ç–æ—Ä–∂–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö
    - –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
    - —Å–ª–∏—à–∫–æ–º —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —è–∑—ã–∫–∞

    –û–ß–ï–ù–¨ –í–ê–ñ–ù–û: –æ—Ç–∑—ã–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º (2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), —Ç–∞–∫ –∫–∞–∫ —Ä–µ–∞–ª—å–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã –Ω–µ –ø–∏—à—É—Ç –¥–ª–∏–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã.

    –í–æ—Ç –æ—Ç–∑—ã–≤, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º –∏ —á–µ–ª–æ–≤–µ—á–Ω—ã–º:
    "{review}"

    –°–æ–∑–¥–∞–π –Ω–æ–≤—É—é, –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫—É—é –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —ç—Ç–æ–≥–æ –æ—Ç–∑—ã–≤–∞.
    """
    
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–¢—ã –ø–æ–º–æ–≥–∞–µ—à—å —Å–¥–µ–ª–∞—Ç—å –æ—Ç–∑—ã–≤ –∫–ª–∏–µ–Ω—Ç–∞ –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–º, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∏ —á–µ–ª–æ–≤–µ—á–Ω—ã–º."},
                {"role": "user", "content": humanize_prompt.format(review=review)},
            ],
            temperature=0.8,
            max_tokens=200,
        )
        humanized_review = response.choices[0].message.content.strip()
        context.user_data["generated_review"] = humanized_review
        
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–µ–∑ –∫–Ω–æ–ø–∫–∏ "–û—á–µ–ª–æ–≤–µ—á–∏—Ç—å"
        keyboard = [
            [
                InlineKeyboardButton("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="edit_review"),
                InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", callback_data="send_whatsapp"),
            ],
            [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text(
            text=f"üéâ –û—Ç–∑—ã–≤ –æ—á–µ–ª–æ–≤–µ—á–µ–Ω:\n\"{humanized_review}\"", reply_markup=reply_markup
        )
        return CONFIRM_REVIEW
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ OpenAI API –ø—Ä–∏ –æ—á–µ–ª–æ–≤–µ—á–∏–≤–∞–Ω–∏–∏: {e}")
        
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = [
            [
                InlineKeyboardButton("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="edit_review"),
                InlineKeyboardButton("üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", callback_data="personalize_review"),
                InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", callback_data="send_whatsapp"),
            ],
            [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text(
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–µ–ª–æ–≤–µ—á–∏–≤–∞–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.\n\n–í–∞—à –æ—Ç–∑—ã–≤:\n\"{review}\"",
            reply_markup=reply_markup
        )
        return CONFIRM_REVIEW

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞ ---
def edit_review_handler(update: Update, context: CallbackContext) -> int:
    edited_review = update.message.text
    context.user_data["generated_review"] = edited_review
    
    keyboard = [
        [
            InlineKeyboardButton("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="edit_review"),
            InlineKeyboardButton("üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", callback_data="personalize_review"),
            InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", callback_data="send_whatsapp"),
        ],
        [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(
        f"–í–∞—à –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–∑—ã–≤:\n\"{edited_review}\"\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup
    )
    return CONFIRM_REVIEW

def cancel_edit_handler(update: Update, context: CallbackContext) -> int:
    query = update.callback_query
    query.answer()
    
    generated_review = context.user_data.get("generated_review", "")
    keyboard = [
        [
            InlineKeyboardButton("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="edit_review"),
            InlineKeyboardButton("üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", callback_data="personalize_review"),
            InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp", callback_data="send_whatsapp"),
        ],
        [InlineKeyboardButton("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="restart")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    query.edit_message_text(
        text=f"–û—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω:\n\"{generated_review}\"", reply_markup=reply_markup
    )
    return CONFIRM_REVIEW

# --- –û—Ç–º–µ–Ω–∞ –¥–∏–∞–ª–æ–≥–∞ ---
def cancel(update: Update, context: CallbackContext) -> int:
    update.message.reply_text("–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω–µ–Ω.")
    return ConversationHandler.END

# --- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ---
def main():
    create_tables()
    updater = Updater(TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            START_MENU: [CallbackQueryHandler(start_menu_handler, pattern="^(start_survey|cancel)$")],
            QUESTION: [
                MessageHandler(Filters.text & ~Filters.command, answer_handler),
                CallbackQueryHandler(question_callback_handler, pattern="^(edit_answer|next_question|back_to_menu)$"),
            ],
            CONFIRM_REVIEW: [
                CallbackQueryHandler(
                    review_callback_handler, 
                    pattern="^(edit_review|send_whatsapp|back_from_whatsapp|restart)$"
                ),
                CallbackQueryHandler(
                    personalize_review_handler, 
                    pattern="^personalize_review$"
                ),
                CallbackQueryHandler(
                    humanize_review_handler, 
                    pattern="^humanize_review$"
                ),
                CallbackQueryHandler(
                    restore_original_review_handler, 
                    pattern="^restore_original$"
                ),
            ],
            EDIT_REVIEW_STATE: [
                CallbackQueryHandler(cancel_edit_handler, pattern="^cancel_edit$"),
                MessageHandler(Filters.text & ~Filters.command, edit_review_handler),
            ],
            DEMOGRAPHIC_CHOICE: [
                CallbackQueryHandler(demographic_choice_handler, pattern="^demo_"),
                CallbackQueryHandler(back_to_review_handler, pattern="^back_to_review$"),
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    dp.add_handler(conv_handler)
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()